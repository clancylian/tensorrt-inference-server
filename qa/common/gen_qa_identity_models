#!/bin/bash
# Copyright (c) 2019, NVIDIA CORPORATION. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#  * Neither the name of NVIDIA CORPORATION nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

############################################################################
## This script generates identity models needed by some of the
## tensorrtserver CI tests. Generating these models
## requires using the PyTorch container.
##
## 1. Update PYTORCH_IMAGE to match what is being used by the
## tensorrtserver release being tested.
##
## 2. Run this script to create /tmp/qa_identity_models.
##
############################################################################

PYTORCH_IMAGE=${PYTORCH_IMAGE:=nvcr.io/nvidia/pytorch:19.05-py3}

CUDA_DEVICE=0

###
HOST_SRCDIR=/tmp/gen_srcdir
HOST_DESTDIR=/tmp/qa_identity_models

rm -fr $HOST_DESTDIR
mkdir -p $HOST_DESTDIR

rm -fr $HOST_SRCDIR
mkdir -p $HOST_SRCDIR

cp ./gen_qa_identity_models.py $HOST_SRCDIR/.
cp ./test_util.py $HOST_SRCDIR/.

TORCHSCRIPT=torch_gen.cmds

SRCDIR=/tmp/src
DESTDIR=/tmp/identity_models

# PyTorch
cat >$HOST_SRCDIR/$TORCHSCRIPT <<EOF
#!/bin/bash -x
set -e
export CUDA_VISIBLE_DEVICES=$CUDA_DEVICE
cd $SRCDIR
python3 $SRCDIR/gen_qa_identity_models.py --libtorch --models_dir=$DESTDIR
chown -R $(id -u):$(id -g) $DESTDIR
EOF

chmod a+x $HOST_SRCDIR/$TORCHSCRIPT
if [ $? -ne 0 ]; then
    echo -e "Failed: chmod"
    exit 1
fi

docker pull $PYTORCH_IMAGE
nvidia-docker run --rm --entrypoint $SRCDIR/$TORCHSCRIPT \
       --mount type=bind,source=$HOST_SRCDIR,target=$SRCDIR \
       --mount type=bind,source=$HOST_DESTDIR,target=$DESTDIR \
       $PYTORCH_IMAGE
if [ $? -ne 0 ]; then
    echo -e "Failed"
    exit 1
fi
